_1 = 2
_2 = 2 * _1
_3 = 3 * _1
_4 = 4 * _1
_5 = 5 * _1
_z = _1

a = parameters => $$(parameters.map(
  ([x, y, xt = 0, yt = 0]) => _(
    [x * _1, y * _1, _z],
    align('nx_py'),
    t(xt * _1, _5 - (yt * _1), 0)
  )
))

A = a([
  [1, 5],
  [1, 1, 1],
  [1, 1, 1, 2],
  [1, 5, 2],
])

B = a([
  [1, 5],
  [2, 1, 1],
  [1, 1, 2, 1],
  [1, 1, 1, 2],
  [1, 1, 2, 3],
  [2, 1, 1, 4],
])

C = a([
  [1, 3, 0, 1],
  [2, 1, 1],
  [2, 1, 1, 4],
])

D = a([
  [1, 5],
  [1, 1, 1],
  [1, 1, 1, 4],
  [1, 4, 2, 1],
])

E = a([
  [1, 5],
  [2, 1, 1],
  [1, 1, 1, 2],
  [2, 1, 1, 4],
])

F = a([
  [1, 5],
  [2, 1, 1],
  [1, 1, 1, 2],
])

G = a([
  [1, 4, 0, 1],
  [2, 1, 1],
  [1, 1, 2, 3],
  [2, 1, 1, 4],
])

H = a([
  [1, 5],
  [1, 1, 1, 2],
  [1, 5, 2],
])

I = a([
  [3, 1],
  [1, 3, 1, 1],
  [3, 1, 0, 4],
])

J = a([
  [3, 1],
  [1, 3, 1, 1],
  [2, 1, 0, 4],
])

K = a([
  [1, 5],
  [1, 2, 2],
  [1, 1, 1, 2],
  [1, 2, 2, 3],
])

L = a([
  [1, 5],
  [2, 1, 1, 4],
])

M = a([
  [1, 5],
  [1, 2, 1],
  [1, 5, 2],
])

N = a([
  [1, 5],
  [1, 1, 1],
  [1, 4, 2, 1],
])

O = a([
  [1, 4, 0, 1],
  [1, 1, 1],
  [1, 1, 1, 4],
  [1, 4, 2],
])

P = a([
  [1, 5],
  [1, 1, 1],
  [1, 1, 1, 2],
  [1, 3, 2],
])

Q = a([
  [1, 2, 0, 1],
  [2, 1, 0, 3],
  [1, 1, 1],
  [2, 1, 1, 4],
  [1, 2, 2, 1],
])

R = a([
  [1, 5],
  [1, 1, 1],
  [1, 1, 1, 2],
  [1, 2, 2],
  [1, 2, 2, 3],
])

S = a([
  [2, 1, 1],
  [1, 1, 0, 1],
  [3, 1, 0, 2],
  [1, 1, 2, 3],
  [2, 1, 0, 4],
])

T = a([
  [3, 1],
  [1, 4, 1, 1],
])

U = a([
  [1, 4],
  [1, 1, 1, 4],
  [1, 5, 2],
])

V = a([
  [1, 4],
  [1, 1, 1, 4],
  [1, 4, 2],
])

W = a([
  [1, 5],
  [1, 2, 1, 3],
  [1, 5, 2],
])

X = a([
  [1, 2],
  [1, 2, 0, 3],
  [1, 1, 1, 2],
  [1, 2, 2],
  [1, 2, 2, 3],
])

Y = a([
  [1, 2],
  [2, 1, 0, 2],
  [2, 1, 0, 4],
  [1, 5, 2],
])

Z = a([
  [3, 1],
  [1, 1, 2, 1],
  [1, 1, 1, 2],
  [1, 1, 0, 3],
  [3, 1, 0, 4],
])

zero = a([
  [1, 5],
  [1, 1, 1],
  [1, 1, 1, 4],
  [1, 5, 2],
])

one = a([
  [1, 1],
  [1, 4, 1],
  [3, 1, 0, 4],
])

two = a([
  [3, 1],
  [1, 1, 2, 1],
  [3, 1, 0, 2],
  [1, 1, 0, 3],
  [3, 1, 0, 4],
])

three = a([
  [2, 1],
  [1, 1, 1, 2],
  [2, 1, 0, 4],
  [1, 5, 2],
])

four = a([
  [1, 2],
  [2, 1, 0, 2],
  [1, 5, 2],
])

five = a([
  [3, 1],
  [1, 1, 0, 1],
  [3, 1, 0, 2],
  [1, 1, 2, 3],
  [3, 1, 0, 4],
])

six = a([
  [1, 5],
  [1, 1, 1, 2],
  [1, 1, 1, 4],
  [1, 3, 2, 2],
])

seven = a([
  [2, 1],
  [1, 5, 2],
])

eight = a([
  [1, 5],
  [1, 1, 1],
  [1, 1, 1, 2],
  [1, 1, 1, 4],
  [1, 5, 2],
])

nine = a([
  [1, 3],
  [1, 1, 1],
  [1, 1, 1, 2],
  [1, 5, 2],
])

return [
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
  X,
  Y,
  Z,
  zero,
  one,
  two,
  three,
  four,
  five,
  six,
  seven,
  eight,
  nine,
].map((geometry, index, array) =>
  _(geometry, tx(_4 * (index - array.length / 2)))
)
